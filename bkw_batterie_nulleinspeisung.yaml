blueprint:
  name: PV Nulleinspeisung mit Batterie-Steuerung
  description: >
    Steuert einen Marstek B2500 + Deye 800W Wechselrichter für Nulleinspeisung
    auf Basis des saldierenden Smarty-Stromzählers. 
    Enthält Min/Max Clamp, LowBat-Priorität und Cooldowns.
  domain: automation
  input:
    calc_house_consumption:
      name: Hausverbrauch (Template-Sensor)
      description: >
        Template-Sensor, der den echten Hausverbrauch berechnet.
      selector:
        entity:
          domain: sensor

    battery_level:
      name: Batterie Ladezustand
      selector:
        entity:
          domain: sensor

    output_value_number:
      name: Wechselrichter Leistungsvorgabe
      selector:
        entity:
          domain: number

    wr_switch:
      name: Wechselrichter Schalter
      selector:
        entity:
          domain: switch

    charging_mode_select:
      name: Lade/Entlade Modus der Batterie
      selector:
        entity:
          domain: select

    min_output:
      name: Mindestleistung WR
      default: 30
      selector:
        number:
          min: 0
          max: 800
          unit_of_measurement: W
          step: 10
          mode: slider

    max_output:
      name: Maximalleistung WR
      default: 800
      selector:
        number:
          min: 100
          max: 800
          unit_of_measurement: W
          step: 10
          mode: slider

    lowbat_threshold:
      name: LowBat-Schwelle (%)
      default: 11
      selector:
        number:
          min: 5
          max: 50
          unit_of_measurement: "%"
          step: 1

    cooldown_increase:
      name: Cooldown bei Erhöhung (Sekunden)
      default: 180
      selector:
        number:
          min: 0
          max: 600
          step: 10
          unit_of_measurement: s

    cooldown_decrease:
      name: Cooldown bei Reduzierung (Sekunden)
      default: 15
      selector:
        number:
          min: 0
          max: 120
          step: 5
          unit_of_measurement: s

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input calc_house_consumption
  - platform: state
    entity_id: !input battery_level

variables:
  hausverbrauch: "{{ states(!input 'calc_house_consumption') | float(0) }}"
  soc: "{{ states(!input 'battery_level') | float(0) }}"
  min_output: !input min_output
  max_output: !input max_output
  lowbat_threshold: !input lowbat_threshold

action:
  - choose:
      # ---- LowBat Vorrang ----
      - conditions:
          - condition: template
            value_template: "{{ soc < lowbat_threshold }}"
        sequence:
          - service: select.select_option
            target:
              entity_id: !input charging_mode_select
            data:
              option: charge
          - service: switch.turn_on
            target:
              entity_id: !input wr_switch
          - service: number.set_value
            target:
              entity_id: !input output_value_number
            data:
              value: "{{ max_output }}"

      # ---- Normalbetrieb ----
      - conditions:
          - condition: template
            value_template: "{{ soc >= lowbat_threshold }}"
        sequence:
          - variables:
              zielwert: >
                {% set val = hausverbrauch %}
                {% if val < min_output %}
                  {{ min_output }}
                {% elif val > max_output %}
                  {{ max_output }}
                {% else %}
                  {{ val }}
                {% endif %}

          # Wechselrichter einschalten
          - service: switch.turn_on
            target:
              entity_id: !input wr_switch

          # Lade/Entlade-Modus auf Auto
          - service: select.select_option
            target:
              entity_id: !input charging_mode_select
            data:
              option: auto

          # Leistung nur anpassen wenn Cooldowns erfüllt
          - choose:
              - conditions:
                  - condition: template
                    value_template: >
                      {{ zielwert > states(!input 'output_value_number')|float(0) }}
                sequence:
                  - delay: !input cooldown_increase
                  - service: number.set_value
                    target:
                      entity_id: !input output_value_number
                    data:
                      value: "{{ zielwert }}"
              - conditions:
                  - condition: template
                    value_template: >
                      {{ zielwert < states(!input 'output_value_number')|float(0) }}
                sequence:
                  - delay: !input cooldown_decrease
                  - service: number.set_value
                    target:
                      entity_id: !input output_value_number
                    data:
                      value: "{{ zielwert }}"

          